buildscript {
	ext {
		kotlinVersion = '1.1.1'
		springBootVersion = '1.5.3.RELEASE'
	}
    repositories {
        mavenCentral()
        jcenter()
    }
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath 'nu.studer:gradle-jooq-plugin:2.0.6'
        classpath 'mysql:mysql-connector-java:5.1.16'
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'nu.studer.jooq'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

repositories {
	mavenCentral()
    jcenter()
    maven {
        url 'https://plugins.gradle.org/m2/'
    }
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-jooq')
	compile('org.springframework.boot:spring-boot-starter-web')

    compile('io.springfox:springfox-swagger2:2.6.1')
    compile('io.springfox:springfox-swagger-ui:2.6.1')

    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")

	compile('org.jooq:jooq')
	compile('org.jooq:jooq-meta')
	compile('org.jooq:jooq-codegen')

    jooqRuntime 'mysql:mysql-connector-java'

    runtime('mysql:mysql-connector-java')

    testCompile('org.springframework.boot:spring-boot-starter-test')
}

jooq {
    sample(sourceSets.main) {
        jdbc {
            driver = 'com.mysql.jdbc.Driver'
            url = 'jdbc:mysql://localhost/fleet'
            user = 'user'
            password = 'password'
            schema = 'fleet'
        }
        generator {
            name = 'org.jooq.util.DefaultGenerator'
            strategy {
                name = 'org.jooq.util.DefaultGeneratorStrategy'
            }
            database {
                name = 'org.jooq.util.mysql.MySQLDatabase'
                excludes = 'proc'
                includes = '.*'
                inputSchema = 'fleet'
            }
            generate {
                relations = true
                deprecated = false
                records = true
                pojos = true
                fluentSetters = true
            }
            target {
                packageName = 'com.an3ll.data'
                directory = 'src/main/java/'
            }
        }
    }
}

//do not generate jooq when building by default
project.tasks.getByName('compileKotlin').dependsOn -= 'generateSampleJooqSchemaSource'
project.tasks.getByName('clean').dependsOn -= 'cleanGenerateSampleJooqSchemaSource'
